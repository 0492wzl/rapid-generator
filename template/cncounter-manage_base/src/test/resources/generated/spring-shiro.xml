<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd"
       default-autowire="byName">

    <import resource="spring-cache.xml"/>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.ybs.exam.auth.shiro.realm.ExamAuthorizingRealm">
        <!--<property name="credentialsMatcher" ref="credentialsMatcher"/>-->
        <!--<property name="UserService" ref="UserService"/>-->
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>


    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroLocalCacheManager"/>
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login/timeout"/>
        <property name="successUrl" value="/index.jsp"/>
        <property name="unauthorizedUrl" value="/unAuthorized.jsp"/>
        <!--<property name="filters">-->
            <!--<util:map>-->
                <!--<entry key="User" value-ref="UserFilter"/>-->
                <!--<entry key="forceLogout" value-ref="forceLogoutFilter"/>-->
            <!--</util:map>-->
        <!--</property>-->
        <property name="filterChainDefinitions">
            <value>
                /resources/**=anon
                /=anon
                /main**=anon
                /login**=anon
                /unAuthorized=anon
                /logout = logout
                /course/**=noSessionCreation
                /** = user
            </value>
        </property>
    </bean>

    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 示例自定义拦截器，此处可不要 -->
    <!--<bean id="UserFilter" class="com.yhbj.shiro.filter.UserFilter"/>-->
    <!--<bean id="forceLogoutFilter" class="com.yhbj.shiro.filter.ForceLogoutFilter"/>-->

    <!-- 使用注解的方式，所以未登陆，无权限都已异常抛出，需要增加此配置来进行单独处理 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthenticatedException">/login/timeout</prop>
                <prop key="org.apache.shiro.authz.UnauthorizedException">/unAuthorized</prop>
            </props>
        </property>
    </bean>

    <!-- session会话存储的实现类 -->
    <!--<bean id="redisShiroSessionDAO" class="com.yhbj.shiro.session.MySessionDao">-->
        <!--<property name="redisManager" ref="redisManager" />-->
    <!--</bean>-->
    <!--<bean id="shiroSessionDAO" class="com.yhbj.shiro.session.MyMemerySessionDao">-->

    <!--</bean>-->

    <bean id="redisSessionDAO" class="com.ybs.exam.auth.shiro.session.RedisSessionDao">
        <property name="redisManager" ref="redisManager" />
        <property name="cacheManager" ref="shiroLocalCacheManager"/>    
    </bean>
    <!-- sessionManager -->
    <!-- session管理器 -->
    <bean id="sessionManager"
          class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="globalSessionTimeout" value="1800000" />
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
        <property name="deleteInvalidSessions" value="true" />
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000" />

        <!-- session存储的实现 -->
        <!--<property name="sessionDAO" ref="redisSessionDAO" />-->
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
        <property name="sessionIdCookie" ref="sharesession" />
        <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true" />
        <!-- 与mybatis的sessionFactory冲突,需显示注入 -->
        <property name="sessionFactory" ref="shiroSessionFactory"/>
        <!-- 设定session的cache -->
        <!--<property name="cacheManager" ref="shiroLocalCacheManager"/>-->

    </bean>

    <bean id="shiroSessionFactory" class="org.apache.shiro.session.mgt.SimpleSessionFactory"/>

    <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- cookie的name,对应的默认是 JSESSIONID -->
        <constructor-arg name="name" value="EXAMJSESSIONID" />
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
        <property name="path" value="/" />
        <property name="httpOnly" value="true"/>
    </bean>

</beans>
